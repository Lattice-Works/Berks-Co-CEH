#change limit for prod: select * from incomebenefits;

entityDefinitions:
  client:
    fqn: "general.person"
    entitySetName: "BerksCEHClients"
    propertyDefinitions:
      nc.SubjectIdentification:
        type: "nc.SubjectIdentification"
        column: "PersonalID"
      ol.datasource:
        type: "ol.datasource"
        transforms:
        - !<transforms.ValueTransform>
          value: "Berks CEH"
    conditions:
    - !<conditions.BooleanIsNullCondition>
      column: "PersonalID"
      reverse: true
    name: "client"


  medicaid:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHMedicaid"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["Medicaid", "NoMedicaidReason"]
          separator: "_"
      general.status:
        type: "general.status"
        column: "Medicaid"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Medicaid"
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoMedicaidReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "Medicaid"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoMedicaidReason"
      reverse: true
    name: "medicaid"

  medicare:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHMedicare"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["Medicare", "NoMedicareReason"]
          separator: "_"
      general.status:
        type: "general.status"
        column: "Medicare"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Medicare"
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoMedicareReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "Medicare"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoMedicareReason"
      reverse: true
    name: "medicare"

  schip:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHSCHIP"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["SCHIP", "NoSCHIPReason"]
          separator: "_"
      general.status:
        type: "general.status"
        column: "SCHIP"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Healthy Kids (CHI) (State Children's HIP)"
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoSCHIPReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "SCHIP"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoSCHIPReason"
      reverse: true
    name: "schip"

  vamedicalservices:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHVAMedicalServices"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["NoVAMedReason", "VAMedicalServices"]
          separator: "_"
      general.status:
        type: "general.status"
        column: "VAMedicalServices"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "VA Medical Services"
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoVAMedReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "VAMedicalServices"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoVAMedReason"
      reverse: true
    name: "vamedicalservices"

  employerprovidedinsurance:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHEmployerProvidedInsurance"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["NoEmployerProvidedReason", "EmployerProvided"]
          separator: "_"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Employer Provided"
      general.status:
        type: "general.status"
        column: "EmployerProvided"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoEmployerProvidedReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "EmployerProvided"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoEmployerProvidedReason"
      reverse: true
    name: "employerprovidedinsurance"

  cobrainsurance:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHCOBRAInsurance"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["COBRA", "NoCOBRAReason"]
          separator: "_"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "COBRA"
      general.status:
        type: "general.status"
        column: "COBRA"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoCOBRAReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "COBRA"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoCOBRAReason"
      reverse: true
    name: "cobrainsurance"

  privatepay:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHPrivatePay"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["PrivatePay", "NoPrivatePayReason"]
          separator: "_"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Private Pay Insurance"
      general.status:
        type: "general.status"
        column: "PrivatePay"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoPrivatePayReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "PrivatePay"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoPrivatePayReason"
      reverse: true
    name: "privatepay"

  statehealthinsurance:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHStateHealthInsurance"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["StateHealthIns", "NoStateHealthInsReason"]
          separator: "_"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "State Health Insurance"
      general.status:
        type: "general.status"
        column: "StateHealthIns"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoStateHealthInsReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "StateHealthIns"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoStateHealthInsReason"
      reverse: true
    name: "statehealthinsurance"

  indianhealthservices:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHIndianHealthServicesInsurance"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["IndianHealthServices", "NoIndianHealthServicesReason"]
          separator: "_"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Indian Health Services"
      general.status:
        type: "general.status"
        column: "IndianHealthServices"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.statusdetails:
        type: "ol.statusdetails"
        column: "NoIndianHealthServicesReason"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["1", "2", "3", "4", "8", "9", "99"]
          goal: ["Applied; decision pending", "Applied; client not eligible", "Client did not apply", "Insurance type n/a for this client", "Client doesn't know", "Client refused", "Data not collected"]
          ignoreCase: true
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "IndianHealthServices"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "NoStateHealthInsReason"
      reverse: true
    name: "indianhealthservices"

  otherinsurance:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHOtherInsurances"
    propertyDefinitions:
      general.id:
        type: "general.id"
        transforms:
        - !<transforms.ConcatTransform>
          columns: ["OtherInsurance", "OtherInsuranceIdentify"]
          separator: "_"
      general.status:
        type: "general.status"
        column: "OtherInsurance"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
      ol.organizationname:
        type: "ol.organizationname"
        column: "OtherInsuranceIdentify"
    conditions:
    - !<conditions.ConditionalOr> {}
    - !<conditions.BooleanIsNullCondition>
      column: "OtherInsurance"
      reverse: true
    - !<conditions.BooleanIsNullCondition>
      column: "OtherInsuranceIdentify"
      reverse: true
    name: "otherinsurance"

  connectionwithsoarinsurance:
    fqn: "ol.insurance"
    entitySetName: "BerksCEHConnectionWithSOARInsurance"
    propertyDefinitions:
      general.id:
        type: "general.id"
        column: "ConnectionWithSOAR"
      ol.organizationname:
        type: "ol.organizationname"
        transforms:
        - !<transforms.ValueTransform>
          value: "Connection With SOAR"
      general.status:
        type: "general.status"
        column: "ConnectionWithSOAR"
        transforms:
        - !<transforms.ParseIntTransform> {}
        - !<transforms.ReplaceTransform>
          target: ["0", "1"]
          goal: ["No", "Yes"]
    conditions:
    - !<conditions.BooleanIsNullCondition>
      column: "ConnectionWithSOAR"
      reverse: true
    name: "connectionwithsoarinsurance"

associationDefinitions:
  insuredby1:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "medicare"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby1"

  insuredby2:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "medicaid"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby2"

  insuredby3:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "schip"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby3"

  insuredby4:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "vamedicalservices"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby4"

  insuredby5:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "employerprovidedinsurance"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby5"

  insuredby6:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "cobrainsurance"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby6"

  insuredby7:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "privatepay"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby7"

  insuredby8:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "statehealthinsurance"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby8"

  insuredby9:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "indianhealthservices"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby9"

  insuredby10:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "otherinsurance"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby10"

  insuredby11:
    fqn: "health.insuredby"
    entitySetName: "BerksInsuredby"
    src: "client"
    dst: "connectionwithsoarinsurance"
    propertyDefinitions:
      date.completeddatetime:
        type: "date.completeddatetime"
        column: "InformationDate"
        transforms:
        - !<transforms.DateTimeTransform>
          pattern: ["yyyy-MM-dd HH:mm:ss", "yyyy-MM-dd HH:mm:ss.S"]
          timezone: "America/New York"
    name: "insuredby11"
